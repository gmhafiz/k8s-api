# Build with:
#   TAG=$(git rev-parse HEAD)
#   docker build -f Dockerfile-migrate -t app/migrate --build-arg GIT_COMMIT=$TAG .
#
# Inspect
#   docker inspect  app/migrate | jq '.[].ContainerConfig.Labels'
#
# Push
#   docker tag app/migrate gmhafiz/migrate:$TAG
#   docker push gmhafiz/migrate:$TAG
#   echo gmhafiz/migrate:$TAG
#
# Run with
#   docker run --rm -it --name migrate app/migrate:$TAG

FROM golang:1.19 AS src

WORKDIR /go/src/app/

# Copy dependencies first to take advantage of Docker caching
COPY go.mod ./
COPY go.sum ./
RUN go mod download

COPY . .

# Insert version using git tag and latest commit hash
# Build Go Binary
RUN CGO_ENABLED=0 GOOS=linux go build -ldflags="-w -s" -o ./migrate cmd/migrate/main.go;

FROM gcr.io/distroless/static-debian11

LABEL com.example.maintainers="User <author@example.com>"

ARG GIT_COMMIT=unspecified
LABEL git_commit=$GIT_COMMIT

WORKDIR /App

COPY --from=src /go/src/app/migrate /usr/local/bin/migrate

ENTRYPOINT ["/usr/local/bin/migrate"]
